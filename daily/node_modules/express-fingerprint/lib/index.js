'use strict';

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _murmurhash3js = require('murmurhash3js');

var _murmurhash3js2 = _interopRequireDefault(_murmurhash3js);

var _async = require('async');

var _async2 = _interopRequireDefault(_async);

var _parameters = require('./parameters');

var _parameters2 = _interopRequireDefault(_parameters);

var _traverse = require('traverse');

var _traverse2 = _interopRequireDefault(_traverse);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const hash = _murmurhash3js2.default.x64;

const Fingerprint = setting => {
  const config = (0, _extends3.default)({
    parameters: [Fingerprint.useragent, Fingerprint.acceptHeaders, Fingerprint.geoip]
  }, setting);

  return (req, res, next) => {
    let components = {};
    config.req = req;
    let fingerprint = { hash: null };
    _async2.default.eachLimit(config.parameters, 1, (parameter, callback) => {
      parameter.bind(config)((err, obj) => {
        Object.keys(obj).forEach(key => {
          components[key] = obj[key];
        });
        callback(err);
      });
    }, err => {
      if (!err) {
        let leaves = (0, _traverse2.default)(components).reduce(function (acc, x) {
          if (this.isLeaf) acc.push(x);
          return acc;
        }, []);
        fingerprint.hash = hash.hash128(leaves.join('~~~'));
        fingerprint.components = components; // debug
        req.fingerprint = fingerprint;
      }
      next();
    });
  };
};

Object.keys(_parameters2.default).forEach(key => {
  Fingerprint[key] = _parameters2.default[key];
});

exports = module.exports = Fingerprint;