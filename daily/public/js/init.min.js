var ajax = {};
ajax.x = function() {
  if (typeof XMLHttpRequest !== 'undefined') {
    return new XMLHttpRequest();
  }
  var versions = [
    "MSXML2.XmlHttp.6.0",
    "MSXML2.XmlHttp.5.0",
    "MSXML2.XmlHttp.4.0",
    "MSXML2.XmlHttp.3.0",
    "MSXML2.XmlHttp.2.0",
    "Microsoft.XmlHttp"
  ];

  var xhr;
  for (var i = 0; i < versions.length; i++) {
    try {
      xhr = new ActiveXObject(versions[i]);
      break;
    } catch (e) {}
  }
  return xhr;
};

ajax.send = function(url, callback, method, data, async) {
  if (async ===undefined) {
    async = true;
  }
  var x = ajax.x();
  x.open(method, url, async);
  x.onreadystatechange = function() {
    if (x.readyState == 4) {
      callback(x.responseText)
    }
  };
  if (method == 'POST') {
    x.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
  }
  x.send(data)
};

ajax.get = function(url, data, callback, async) {
  var query = [];
  for (var key in data) {
    query.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));
  }
  ajax.send(url + (query.length ? '?' + query.join('&') : ''), callback, 'GET', null, async)
};

ajax.post = function(url, data, callback, async) {
  var query = [];
  for (var key in data) {
    query.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));
  }
  ajax.send(url, callback, 'POST', query.join('&'), async)
};
document.addEventListener("keypress", function(event) {
  var keyCode = event.keyCode;
  var modalAlert = document.getElementById('alertID');
  var unElem = document.getElementById('txtID');
  var pwElem = document.getElementById('txtPW');
  var currActive = document.activeElement;
  switch (true) {
    case (keyCode == 13 && unElem == currActive):
      return pwElem.focus();
    case (keyCode == 13 && pwElem == currActive):
      return _callSubmit();
  }
});
var pwlabel = 'Password';
var unlabel = 'Username';
var tmpun = 'Username';
function _setPWDXXX(obj) {
  if (obj == null) { return; }
  if (obj.value != pwlabel) {
    obj.type = 'password';
  }
}

function _checkPWData(obj) {
  if (obj.value == '') {
    obj.value = pwlabel;
    obj.type = 'text';
  }
}

function _setUserNameData(obj) {
  if (obj.value == unlabel) {
    obj.value = ''
  } else {
    obj.value = tmpun
  }
}

function _checkUserNameData(obj) {
  if (obj.value == '') {
    obj.value = unlabel
  } else {
    tmpun = obj.value
  }
}

function md5AUT(s) {
  var L = function L(k, d) {
    return k << d | k >>> 32 - d;
  };

  var K = function K(G, k) {
    var I, d, F, H, x;
    F = G & 2147483648;
    H = k & 2147483648;
    I = G & 1073741824;
    d = k & 1073741824;
    x = (G & 1073741823) + (k & 1073741823);
    if (I & d) {
      return x ^ 2147483648 ^ F ^ H;
    }
    if (I | d) {
      if (x & 1073741824) {
        return x ^ 3221225472 ^ F ^ H;
      } else {
        return x ^ 1073741824 ^ F ^ H;
      }
    } else {
      return x ^ F ^ H;
    }
  };

  var r = function r(d, F, k) {
    return d & F | ~d & k;
  };

  var q = function q(d, F, k) {
    return d & k | F & ~k;
  };

  var p = function p(d, F, k) {
    return d ^ F ^ k;
  };

  var n = function n(d, F, k) {
    return F ^ (d | ~k);
  };

  var u = function u(G, F, aa, Z, k, H, I) {
    G = K(G, K(K(r(F, aa, Z), k), I));
    return K(L(G, H), F);
  };

  var f = function f(G, F, aa, Z, k, H, I) {
    G = K(G, K(K(q(F, aa, Z), k), I));
    return K(L(G, H), F);
  };

  var D = function D(G, F, aa, Z, k, H, I) {
    G = K(G, K(K(p(F, aa, Z), k), I));
    return K(L(G, H), F);
  };

  var t = function t(G, F, aa, Z, k, H, I) {
    G = K(G, K(K(n(F, aa, Z), k), I));
    return K(L(G, H), F);
  };

  var e = function e(G) {
    var Z;
    var F = G.length;
    var x = F + 8;
    var k = (x - x % 64) / 64;
    var I = (k + 1) * 16;
    var aa = Array(I - 1);
    var d = 0;
    var H = 0;
    while (H < F) {
      Z = (H - H % 4) / 4;
      d = H % 4 * 8;
      aa[Z] = aa[Z] | G.charCodeAt(H) << d;
      H++;
    }
    Z = (H - H % 4) / 4;
    d = H % 4 * 8;
    aa[Z] = aa[Z] | 128 << d;
    aa[I - 2] = F << 3;
    aa[I - 1] = F >>> 29;
    return aa;
  };

  var B = function B(x) {
    var k = "",
      F = "",
      G,
      d;
    for (d = 0; d <= 3; d++) {
      G = x >>> d * 8 & 255;
      F = "0" + G.toString(16);
      k = k + F.substr(F.length - 2, 2);
    }
    return k;
  };

  var J = function J(k) {
    k = k.replace(/rn/g, "n");
    var d = "";
    for (var F = 0; F < k.length; F++) {
      var x = k.charCodeAt(F);
      if (x < 128) {
        d += String.fromCharCode(x);
      } else {
        if (x > 127 && x < 2048) {
          d += String.fromCharCode(x >> 6 | 192);
          d += String.fromCharCode(x & 63 | 128);
        } else {
          d += String.fromCharCode(x >> 12 | 224);
          d += String.fromCharCode(x >> 6 & 63 | 128);
          d += String.fromCharCode(x & 63 | 128);
        }
      }
    }
    return d;
  };
  var C = Array();
  var P, h, E, v, g, Y, X, W, V;
  var S = 7,
    Q = 12,
    N = 17,
    M = 22;
  var A = 5,
    z = 9,
    y = 14,
    w = 20;
  var o = 4,
    m = 11,
    l = 16,
    j = 23;
  var U = 6,
    T = 10,
    R = 15,
    O = 21;
  s = J(s);
  C = e(s);
  Y = 1732584193;
  X = 4023233417;
  W = 2562383102;
  V = 271733878;
  for (P = 0; P < C.length; P += 16) {
    h = Y;
    E = X;
    v = W;
    g = V;
    Y = u(Y, X, W, V, C[P + 0], S, 3614090360);
    V = u(V, Y, X, W, C[P + 1], Q, 3905402710);
    W = u(W, V, Y, X, C[P + 2], N, 606105819);
    X = u(X, W, V, Y, C[P + 3], M, 3250441966);
    Y = u(Y, X, W, V, C[P + 4], S, 4118548399);
    V = u(V, Y, X, W, C[P + 5], Q, 1200080426);
    W = u(W, V, Y, X, C[P + 6], N, 2821735955);
    X = u(X, W, V, Y, C[P + 7], M, 4249261313);
    Y = u(Y, X, W, V, C[P + 8], S, 1770035416);
    V = u(V, Y, X, W, C[P + 9], Q, 2336552879);
    W = u(W, V, Y, X, C[P + 10], N, 4294925233);
    X = u(X, W, V, Y, C[P + 11], M, 2304563134);
    Y = u(Y, X, W, V, C[P + 12], S, 1804603682);
    V = u(V, Y, X, W, C[P + 13], Q, 4254626195);
    W = u(W, V, Y, X, C[P + 14], N, 2792965006);
    X = u(X, W, V, Y, C[P + 15], M, 1236535329);
    Y = f(Y, X, W, V, C[P + 1], A, 4129170786);
    V = f(V, Y, X, W, C[P + 6], z, 3225465664);
    W = f(W, V, Y, X, C[P + 11], y, 643717713);
    X = f(X, W, V, Y, C[P + 0], w, 3921069994);
    Y = f(Y, X, W, V, C[P + 5], A, 3593408605);
    V = f(V, Y, X, W, C[P + 10], z, 38016083);
    W = f(W, V, Y, X, C[P + 15], y, 3634488961);
    X = f(X, W, V, Y, C[P + 4], w, 3889429448);
    Y = f(Y, X, W, V, C[P + 9], A, 568446438);
    V = f(V, Y, X, W, C[P + 14], z, 3275163606);
    W = f(W, V, Y, X, C[P + 3], y, 4107603335);
    X = f(X, W, V, Y, C[P + 8], w, 1163531501);
    Y = f(Y, X, W, V, C[P + 13], A, 2850285829);
    V = f(V, Y, X, W, C[P + 2], z, 4243563512);
    W = f(W, V, Y, X, C[P + 7], y, 1735328473);
    X = f(X, W, V, Y, C[P + 12], w, 2368359562);
    Y = D(Y, X, W, V, C[P + 5], o, 4294588738);
    V = D(V, Y, X, W, C[P + 8], m, 2272392833);
    W = D(W, V, Y, X, C[P + 11], l, 1839030562);
    X = D(X, W, V, Y, C[P + 14], j, 4259657740);
    Y = D(Y, X, W, V, C[P + 1], o, 2763975236);
    V = D(V, Y, X, W, C[P + 4], m, 1272893353);
    W = D(W, V, Y, X, C[P + 7], l, 4139469664);
    X = D(X, W, V, Y, C[P + 10], j, 3200236656);
    Y = D(Y, X, W, V, C[P + 13], o, 681279174);
    V = D(V, Y, X, W, C[P + 0], m, 3936430074);
    W = D(W, V, Y, X, C[P + 3], l, 3572445317);
    X = D(X, W, V, Y, C[P + 6], j, 76029189);
    Y = D(Y, X, W, V, C[P + 9], o, 3654602809);
    V = D(V, Y, X, W, C[P + 12], m, 3873151461);
    W = D(W, V, Y, X, C[P + 15], l, 530742520);
    X = D(X, W, V, Y, C[P + 2], j, 3299628645);
    Y = t(Y, X, W, V, C[P + 0], U, 4096336452);
    V = t(V, Y, X, W, C[P + 7], T, 1126891415);
    W = t(W, V, Y, X, C[P + 14], R, 2878612391);
    X = t(X, W, V, Y, C[P + 5], O, 4237533241);
    Y = t(Y, X, W, V, C[P + 12], U, 1700485571);
    V = t(V, Y, X, W, C[P + 3], T, 2399980690);
    W = t(W, V, Y, X, C[P + 10], R, 4293915773);
    X = t(X, W, V, Y, C[P + 1], O, 2240044497);
    Y = t(Y, X, W, V, C[P + 8], U, 1873313359);
    V = t(V, Y, X, W, C[P + 15], T, 4264355552);
    W = t(W, V, Y, X, C[P + 6], R, 2734768916);
    X = t(X, W, V, Y, C[P + 13], O, 1309151649);
    Y = t(Y, X, W, V, C[P + 4], U, 4149444226);
    V = t(V, Y, X, W, C[P + 11], T, 3174756917);
    W = t(W, V, Y, X, C[P + 2], R, 718787259);
    X = t(X, W, V, Y, C[P + 9], O, 3951481745);
    Y = K(Y, h);
    X = K(X, E);
    W = K(W, v);
    V = K(V, g);
  }
  var i = B(Y) + B(X) + B(W) + B(V);
  return i.toLowerCase();
};
var un = null,
  pass = null;

function _callSubmit() {
  var objUN = document.getElementById('txtID');
  var objPW = document.getElementById('txtPW');
  var un = objUN ? objUN.value : null
  var pw = objPW ? objPW.value : null
  if (un && pw && un != unlabel && pw != pwlabel) {
    var form = document.getElementById('formLoginID')
    var btnSubmit = document.getElementById('submitBTNID')
    btnSubmit.className += " disable";
    var passEn = md5AUT(objPW.value);
    objPW.type = 'password'
    objPW.value = passEn;
    form.submit()
  } else {
    if (!un || un == unlabel) {
      objUN.focus()
      alert('Vui lòng nhập tên truy cập')
    } else if (!pw || pw == pwlabel) {
      objPW.focus()
      alert('Vui lòng nhập mật khẩu')
    }
  }
}

function OKLogin(event) {
  if (!event || (event && event.keyCode == 13)) {
    var modalAlert = document.getElementById('alertID');
    modalAlert.classList.remove('active');
    var dimmerHome = document.getElementById('dimmerHomeID');
    dimmerHome.classList.add('active');
    login();
  }
}

function closeModal() {
  var modal = document.getElementById('modalID');
  modal.classList.remove('active');
}

function login() {
  var username = document.getElementById('unHidden').value;
  var password = document.getElementById('passHidden').value;
  var f = document.createElement("form");
  f.setAttribute('method', "post");
  f.setAttribute('action', "/");

  var un = document.createElement("input"); //input element, text
  un.setAttribute('type', "text");
  un.setAttribute('name', "txtID");
  un.setAttribute('value', username);

  var pass = document.createElement("input"); //input element, text
  pass.setAttribute('type', "password");
  pass.setAttribute('name', "txtPW");
  pass.setAttribute('value', password);

  f.appendChild(un);
  f.appendChild(pass);
  document.getElementsByTagName('body')[0].appendChild(f);
  f.submit();
}

function submitModal() {
  var modalUser = document.getElementById('modalAccount');
  var modalPass = document.getElementById('modalPassID');
  var modalConfirm = document.getElementById('modalConfirmID');
  var user = modalUser.value;
  var pass = modalPass.value;
  var confirm = modalConfirm.value;
  var modalUser = null;
  var modalPassID = null;

  var validateModalUser = document.getElementById('validateModalUserID');
  var labelUserError = document.getElementById('labelUserErrorID');

  var validModalPass = document.getElementById('validateModalPassID');
  var labelPassError = document.getElementById('labelPassErrorID');

  var validModalConfirm = document.getElementById('validateModalConfirmID');
  var labelConfirmError = document.getElementById('labelConfirmErrorID');

  var btnModalClose = document.getElementById('btnModalClose');
  var btnModalSubmit = document.getElementById('btnModalSubmit');

  var dimmerSelect = document.getElementById('dimmerSelectID');
  switch (true) {
    case (!user):
      validateModalUser.classList.add('has-error');
      labelUserError.classList.remove('hide');
      labelUserError.innerHTML = 'Vui lòng nhập tên tài khoản.';
      modalUser.focus();
      break
    case (!pass):
      validModalPass.classList.add('has-error');
      labelPassError.classList.remove('hide');
      labelPassError.innerHTML = 'Vui lòng nhập mật khẩu.';
      modalPass.focus();
      break
    case (!confirm):
      validModalConfirm.classList.add('has-error');
      labelConfirmError.classList.remove('hide');
      labelConfirmError.innerHTML = 'Vui lòng xác nhận lại mật khẩu.';
      modalConfirm.focus();
      break;
    case (pass != confirm):
      validModalConfirm.classList.add('has-error');
      labelConfirmError.classList.remove('hide');
      labelConfirmError.innerHTML = 'Xác nhận mật khẩu không chính xác.';
      modalConfirm.focus();
      break;
    default:
      //clean valiate and disable
      validateModalUser.classList.remove('has-error');
      validateModalUser.classList.add('disable');
      labelUserError.classList.add('hide');
      labelUserError.innerHTML = '';

      validModalPass.classList.remove('has-error');
      validModalPass.classList.add('disable');
      labelPassError.classList.add('hide');
      labelPassError.innerHTML = '';

      validModalConfirm.classList.remove('has-error');
      validModalConfirm.classList.add('disable');
      labelConfirmError.classList.add('hide');
      labelConfirmError.innerHTML = '';

      btnModalClose.classList.add('disable');
      btnModalSubmit.classList.add('disable');
      //end
      modalUser = document.getElementById('modalAccount');
      modalPass = document.getElementById('modalPassID');
      var passEn = md5AUT(modalPass.value);
      var user = modalUser.value;
      var btnAutoLoginElem = document.getElementById('btnAutoLoginID');
      dimmerSelect.classList.add('active');
      ajax.post('/api/v1/home/register', { user: user, password: passEn }, function(response) {
        dimmerSelect.classList.remove('active');
        try {
          response = JSON.parse(response)
        } catch (e) {
          response = {}
        }
        var Data = response.Data;
        var StatusCode = response.StatusCode;
        var Error = response.Error;
        if (typeof Error == 'object' && Error.errors && Error.errors[0]) {
          Error = Error.errors[0].message;
        }
        var username, password;
        switch (StatusCode) {
          case 0:
            document.getElementById('unHidden').value = Data.username;
            document.getElementById('passHidden').value = Data.password;
            var mainModal = document.getElementById('modalID');
            var modalAlert = document.getElementById('alertID');
            modalAlert.classList.add('active');
            mainModal.classList.remove('active');
            btnAutoLoginElem.focus();
            break;
          case 1:
            validateModalUser.classList.add('has-error');
            labelUserError.classList.remove('hide');
            labelUserError.innerHTML = Error;
            validModalPass.classList.remove('disable');
            validModalConfirm.classList.remove('disable');
            btnModalClose.classList.remove('disable');
            btnModalSubmit.classList.remove('disable');
            break;
        }
      });
      break
  }
}

function changeImputModal(event, type) {
  var keyCode = event.keyCode;
  var validModal = null;
  var labelError = null
  var elemUser = document.getElementById('modalAccount');
  var validateModalUser = document.getElementById('validateModalUserID');
  var labelUserError = document.getElementById('labelUserErrorID');
  var elemPass = document.getElementById('modalPassID');
  var elemConfirm = document.getElementById('modalConfirmID');
  var hasFocusUser = elemUser == document.activeElement;
  var hasFocusPass = elemPass == document.activeElement;
  var hasFocusConfirm = elemConfirm == document.activeElement;
  switch (true) {
    case (keyCode == 13 && hasFocusUser && !!elemUser.value):
      return elemPass.focus();
      break
    case (keyCode == 13 && hasFocusUser && !elemUser.value):
      validateModalUser.classList.add('has-error');
      labelUserError.classList.remove('hide');
      labelUserError.innerHTML = 'Vui lòng nhập tên tài khoản.';
      elemUser.focus();
      break
    case (keyCode == 13 && hasFocusPass && !!elemPass.value):
      return elemConfirm.focus();
      break
    case (keyCode == 13 && hasFocusConfirm && !!elemConfirm.value):
      elemConfirm.blur();
      return submitModal();
      break
    case (keyCode == 13):
      elemConfirm.blur();
      return submitModal();
      break
    case (type == 'user'):
      validModal = document.getElementById('validateModalUserID');
      labelError = document.getElementById('labelUserErrorID');
      validModal.classList.remove('has-error');
      labelError.innerHTML = '';
      break
    case (type == 'pass'):
      validModal = document.getElementById('validateModalPassID');
      labelError = document.getElementById('labelPassErrorID');
      validModal.classList.remove('has-error');
      labelError.innerHTML = '';
      break;
    case (type == 'confirm'):
      validModal = document.getElementById('validateModalConfirmID');
      labelError = document.getElementById('labelConfirmErrorID');
      validModal.classList.remove('has-error');
      labelError.innerHTML = '';
      break;
  }
}

function forgotPass() {
  var modalForPassElem = document.getElementById('modalForgotPass');
  modalForPassElem.classList.add('active');
  var inputElem = document.getElementById('inputEmail');
  inputElem.focus();
}

function registerQuick() {
  var modal = document.getElementById('modalID');
  var modalAccount = document.getElementById('modalAccount');
  modal.classList.add('active');
  modalAccount.focus();
}

function closeModalForPass() {
  var modalForPassElem = document.getElementById('modalForgotPass');
  modalForPassElem.classList.remove('active');
}

function validateEmail(email) {
  var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
  return re.test(email);
}

function submitForgotPass() {
  var emailElem = document.getElementById('inputEmail');
  var email = emailElem.value;
  var validateEmailElem = document.getElementById('validateEmail');
  var validateEmailMess = document.getElementById('validateEmailMess');
  var loadingEmail = document.getElementById('loadingModalForPass');
  var alertEmail = document.getElementById('alertEmail');
  var modalForPassElem = document.getElementById('modalForgotPass');
  var alertEmailContent = document.getElementById('alertEmailContent');
  var okEmailElem = document.getElementById('okEmail');
  switch (true) {
    case (!email):
      validateEmailElem.classList.add('has-error');
      validateEmailMess.innerHTML = 'Vui lòng nhập địa chỉ email.';
      emailElem.focus();
      break;
    case (validateEmail(email)):
      validateEmailElem.classList.remove('has-error');
      validateEmailMess.innerHTML = '';
      emailElem.blur();
      loadingEmail.classList.add('active');
      ajax.get('/api/v1/home/forgot-password', { email: email }, function(response) {
        loadingEmail.classList.remove('active');
        try {
          response = JSON.parse(response)
        } catch (e) {
          response = {};
        }
        var StatusCode = response.StatusCode;
        var Error = response.Error;
        var Data = response.Data;
        var Message = response.Message;
        switch (StatusCode) {
          case 0:
            alertEmailContent.innerHTML = Message;
            modalForPassElem.classList.remove('active');
            alertEmail.classList.add('active');
            emailElem.value = '';
            okEmailElem.focus();
            break;
          case 1:
            validateEmailElem.classList.add('has-error');
            validateEmailMess.innerHTML = Error;
            emailElem.focus();
            break;
          default:
            break;
        }
      });
      break
    case (!validateEmail(email)):
      validateEmailElem.classList.add('has-error');
      validateEmailMess.innerHTML = 'Địa chỉ email không đúng định dạng.';
      emailElem.focus();
      break;
    default:
      break;
  }
}

function closeAlertEmail() {
  var alertEmail = document.getElementById('alertEmail');
  alertEmail.classList.remove('active');
}

function keyPressEmail(event) {
  var keyCode = event.keyCode;
  if (keyCode == 13) {
    return submitForgotPass();
  } else {
    var validateEmailElem = document.getElementById('validateEmail');
    validateEmailElem.classList.remove('has-error');
    validateEmailMess.innerHTML = '';
  }
}

function keyPressOkEmail(event) {
  var keyCode = event.keyCode;
  if (keyCode == 13) {
    return closeAlertEmail();
  }
}

function onKeyDownSubmit(event) {
  var keyCode = event.keyCode;
  switch (keyCode) {
    case 13:
      break;
    default:
      break;
  }
}

function onKeyDownAutoLogin(event) {
  var keyCode = event.keyCode;
  switch (keyCode) {
    case 13:
      return OKLogin();
      break;
    default:
      break;
  }
}
